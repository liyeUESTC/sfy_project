linux调用库的方式有三种：
1、静态链接库
2、动态链接库
3、动态加载库
动态链接库（共享库）和动态加载库文件没有任何区别，唯一区别是：
动态链接库是程序运行一开始就要加载库，动态加载库是程序在运行到
函数需要这个函数的实现的时候才加载库。
	所以动态加载库就需要一组函数来控制什么时候加载库。这些函数
是dlopen() dlerror() dlsym() dlclose()
上面第2 和第3 就是动态库的两种使用方式：
（1）编译的时候链接动态库 
（2）运行的时候加载动态库
我们调用动态链接库有两种方法：一种是编译的时候，指明所依赖的动态链接库，
这样loader可以在程序启动的时候，来所有的动态链接映射到内存中；
一种是在运行过程中，通过dlopen和dlfree的方式加载动态链接库，动态将动态
链接库加载到内存中。
这两种方式，从编程角度来讲，第一种是最方便的，效率上影响也不大，在内存使用上
有些差别。
第一种方式，一个库的代码，只要运行过一次，便会占用物理内存，之后即使再也不使用，
也会占用物理内存，直到进程的终止。
第二中方式，库代码占用的内存，可以通过dlfree的方式，释放掉，返回给物理内存。
这个差别主要对于那些寿命很长，但又会偶尔调用各种库的进程有关。
如果是这类进程，建议采用第二种方式调用动态链接库